--- chromium-79.0.3945.36.orig/third_party/skia/src/core/SkSpinlock.cpp
+++ chromium-79.0.3945.36/third_party/skia/src/core/SkSpinlock.cpp
@@ -7,16 +7,17 @@

 #include "include/private/SkSpinlock.h"

+// Renamed from "pause" to avoid conflict with function defined in unistd.h
 #if SK_CPU_SSE_LEVEL >= SK_CPU_SSE_LEVEL_SSE2
     #include <emmintrin.h>
-    static void pause() { _mm_pause(); }
+    static void do_pause() { _mm_pause(); }
 #else
-    static void pause() { /*spin*/ }
+    static void do_pause() { /*spin*/ }
 #endif

 void SkSpinlock::contendedAcquire() {
     // To act as a mutex, we need an acquire barrier when we acquire the lock.
     while (fLocked.exchange(true, std::memory_order_acquire)) {
-        pause();
+        do_pause();
     }
 }
